# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import fileSystem_pb2 as fileSystem__pb2


class Q1FileSystemStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UploadFunction = channel.unary_unary(
                '/Q1FileSystem/UploadFunction',
                request_serializer=fileSystem__pb2.UploadRequest.SerializeToString,
                response_deserializer=fileSystem__pb2.UploadResponse.FromString,
                )
        self.DownloadFunction = channel.unary_unary(
                '/Q1FileSystem/DownloadFunction',
                request_serializer=fileSystem__pb2.DownloadRequest.SerializeToString,
                response_deserializer=fileSystem__pb2.DownloadResponse.FromString,
                )
        self.DeleteFunction = channel.unary_unary(
                '/Q1FileSystem/DeleteFunction',
                request_serializer=fileSystem__pb2.DeleteRequest.SerializeToString,
                response_deserializer=fileSystem__pb2.DeleteResponse.FromString,
                )
        self.RenameFunction = channel.unary_unary(
                '/Q1FileSystem/RenameFunction',
                request_serializer=fileSystem__pb2.RenameRequest.SerializeToString,
                response_deserializer=fileSystem__pb2.RenameResponse.FromString,
                )


class Q1FileSystemServicer(object):
    """Missing associated documentation comment in .proto file."""

    def UploadFunction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadFunction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFunction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenameFunction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_Q1FileSystemServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UploadFunction': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadFunction,
                    request_deserializer=fileSystem__pb2.UploadRequest.FromString,
                    response_serializer=fileSystem__pb2.UploadResponse.SerializeToString,
            ),
            'DownloadFunction': grpc.unary_unary_rpc_method_handler(
                    servicer.DownloadFunction,
                    request_deserializer=fileSystem__pb2.DownloadRequest.FromString,
                    response_serializer=fileSystem__pb2.DownloadResponse.SerializeToString,
            ),
            'DeleteFunction': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFunction,
                    request_deserializer=fileSystem__pb2.DeleteRequest.FromString,
                    response_serializer=fileSystem__pb2.DeleteResponse.SerializeToString,
            ),
            'RenameFunction': grpc.unary_unary_rpc_method_handler(
                    servicer.RenameFunction,
                    request_deserializer=fileSystem__pb2.RenameRequest.FromString,
                    response_serializer=fileSystem__pb2.RenameResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Q1FileSystem', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Q1FileSystem(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def UploadFunction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Q1FileSystem/UploadFunction',
            fileSystem__pb2.UploadRequest.SerializeToString,
            fileSystem__pb2.UploadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DownloadFunction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Q1FileSystem/DownloadFunction',
            fileSystem__pb2.DownloadRequest.SerializeToString,
            fileSystem__pb2.DownloadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteFunction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Q1FileSystem/DeleteFunction',
            fileSystem__pb2.DeleteRequest.SerializeToString,
            fileSystem__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RenameFunction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Q1FileSystem/RenameFunction',
            fileSystem__pb2.RenameRequest.SerializeToString,
            fileSystem__pb2.RenameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
